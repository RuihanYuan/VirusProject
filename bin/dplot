#! /usr/bin/env python
# dplot.py
# creates a depth plot from a depth file


import argparse
import os

import seaborn as sns
from matplotlib import pyplot as plt, lines


__version__ = "1.2.0"  # 2024/10/13 HB+3


def parse_depth(depth_input):
	print(f"Parsing depth file {depth_input}")
	depth_list = []
	genome_id_stored = None
	with open(depth_input) as depth_object:
		for row in depth_object:
			genome_id, position, depth_count = row.split()
			if genome_id_stored is None:
				genome_id_stored = genome_id
			elif genome_id != genome_id_stored:
				raise Exception('Error: 1 genome/contig expected')
			position = int(position) - 1
			depth_count = int(depth_count)
			if position >= len(depth_list):
				depth_list.extend([0] * (position - len(depth_list) + 1))
			depth_list[position] = depth_count
	print(f"Parsed depth file {depth_input}")
	return depth_list


def plot_depth(depth_list, fig_output, plot_title, is_normalize, depth_cut_off):
	y_label = "Normalized Depth" if is_normalize else "Depth"
	if is_normalize:
		depth_list = [xx / max(depth_list) for xx in depth_list]
	sns.set_theme(color_codes=True)
	plt.title(plot_title)
	ax = plt.subplot(111)
	sns_plot = sns.lineplot(x=range(len(depth_list)), y=depth_list)
	sns_plot.set(xlabel='Genome Position (bp)', ylabel=y_label)
	if not is_normalize:
		ax.add_line(lines.Line2D([0, len(depth_list) + 1], [depth_cut_off], color="r"))
	print(f"Generating depth plot as {fig_output}")
	plt.savefig(fig_output, bbox_inches='tight', dpi=400, format='svg')
	print("----PLOT GENERATED----")
	plt.close()


def main():
	"""argparse statements"""
	parser = argparse.ArgumentParser(description="Generate depth plots from a depth file.",
									 formatter_class=argparse.RawTextHelpFormatter)
	parser.add_argument("-i", "--input",
						type=str,
						required=True,
						help='path to the input depth file')
	parser.add_argument("-o", "--output",
						type=str,
						required=True,
						help='path to save the output SVG file')
	parser.add_argument("-t", "--title",
						type=str,
						default="Depth Plot",
						help=('title of the plot\n'
							  'default = "Depth Plot"'))
	parser.add_argument("-n", "--normalize",
						action="store_true",
						help=('normalize the depth values\n'
							  'default = False'))
	parser.add_argument("-c", "--cutoff",
						type=int,
						default=20,
						help=('depth cutoff value\n'
							  'default = 20'))
	parser.add_argument("-v", "--version",
						action='version',
						version=f'%(prog)s {__version__}')

	args = parser.parse_args()

	"""input checks"""
	if not os.path.exists(args.input):
		raise Exception(f'Error: Input file {args.input} does not exist')

	"""parsing input"""
	depth_list = parse_depth(args.input)

	"""plotting"""
	plot_depth(depth_list, args.output, args.title, args.normalize, args.cutoff)


if __name__ == '__main__':
	main()
